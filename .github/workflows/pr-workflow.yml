name: PR Testing

on:
  pull_request:
    types: [opened, synchronize, reopened]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          ssh-key: ${{ secrets.PULL_KEY_REPO }}

      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: clippy, rustfmt
          target: wasm32-unknown-unknown
          toolchain: stable

      - name: Install dependencies
        run: sudo apt-get install -y libgtk-3-dev

      - name: Install PostgreSQL Client
        run: sudo apt-get install -y postgresql-client

      - name: Initialize Database SQL
        run: |
          psql postgresql://postgres:postgres@localhost:5432/test -f ./deps/rust-sdk/fixtures/sql/init.sql

      - name: test
        env:
          RUSTFLAGS: "-A warnings"
          DATABASE_TYPE: postgres
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test
        run: |
          echo "" > packages/erp/public/tailwind.css
          echo "" > packages/erp/public/dep.js
          cd packages/erp && cargo test --tests

  test-with-server:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          ssh-key: ${{ secrets.PULL_KEY_REPO }}

      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: clippy, rustfmt
          target: wasm32-unknown-unknown
          toolchain: stable
      - name: Install PostgreSQL Client
        run: sudo apt-get install -y postgresql-client

      - name: Initialize Database SQL
        run: |
          psql postgresql://postgres:postgres@localhost:5432/test -f ./deps/rust-sdk/fixtures/sql/init.sql

      - name: test
        env:
          RUSTFLAGS: "-A warnings"
          DATABASE_TYPE: postgres
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test
          ENV: "dev"
          DOMAIN: "dev.ratel.foundation"
          OPENAPI_KEY: ${{ secrets.OPENAPI_KEY }}
          AUTH_SECRET_KEY: ${{ secrets.DEV_AUTH_SECRET_KEY }}
          BASE_DOMAIN: "ratel.foundation"
          AWS_REGION: ap-northeast-2
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          JWT_SECRET_KEY: ${{ secrets.DEV_JWT_SECRET }}
        run: |
          cd packages/api  && cargo test --tests

  erp-ui:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          ssh-key: ${{ secrets.PULL_KEY_REPO }}

      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: clippy, rustfmt
          target: wasm32-unknown-unknown
          toolchain: stable

      - uses: cargo-bins/cargo-binstall@main

      - name: Install dioxus-cli
        run: |
          cargo binstall dioxus-cli --force
          cargo binstall toml-cli

      - name: Checking violate
        env:
          REGION: ap-northeast-2
          SERVICE: erp
        run: |
          dx check -p $SERVICE

      - name: Build UI
        env:
          REGION: ap-northeast-2
          ACCESS_KEY_ID: ""
          SECRET_ACCESS_KEY: ""
          ENV: dev
          SERVICE: erp
          API_PREFIX: /api
        run: |
          npm i -g @tailwindcss/cli
          make build

  api:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          ssh-key: ${{ secrets.PULL_KEY_REPO }}

      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: clippy, rustfmt
          target: wasm32-unknown-unknown
          toolchain: stable

      - uses: cargo-bins/cargo-binstall@main
      - name: Install toml-cli
        run: |
          cargo binstall toml-cli

      - name: Build APIs
        env:
          REGION: ap-northeast-2
          ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          ENV: dev
          SERVICE: api
          DOMAIN: api.dev.ratel.foundation
        run: |
          make build
